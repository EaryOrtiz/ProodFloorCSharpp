@model ProdFloor.Models.ViewModels.Wiring.WiringViewModel
@{
    ViewBag.Title = "Steps for job";
}
<br />
<div class="row" style="padding-right:20px">
    <h4 class="col-sm-10">
        Steps for Job #@Model.Job.JobNum and PO #@Model.PO.PONumb
    </h4>
</div>
<div>
    <table class="table table-striped border table-sm" style="text-align:center">
        <thead style="background-color:#343a40!important;color:#fff;">
            <tr>
                <th>
                    <label>Consecutivo</label>
                </th>
                <th>
                    <label>Description</label>
                </th>
                <th>
                    <label>Start</label>
                </th>
                <th>
                    <label>Stop</label>
                </th>
                <th>
                    <label>Elapsed </label>
                </th>
                <th>
                    <label>Complete</label>
                </th>
                <th>
                    <label>Obsolete</label>
                </th>
                @if (User.IsInRole("Admin"))
                {
                    <th>
                        <label>Options</label>
                    </th>
                }
            </tr>
        </thead>
        @foreach (var item in Model.StepsForJobList)
        {

            <tr>
                <td>
                    @Html.DisplayFor(m => item.Consecutivo)
                </td>
                <td>
                    @Html.DisplayFor(m => Model.StepList.FirstOrDefault(s => s.StepID == item.StepID).Description)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Start)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Stop)
                </td>
                <td>
                    @((item.Elapsed.Day - 1).ToString()):@(item.Elapsed.Hour.ToString()):@(item.Elapsed.Minute.ToString()):@(item.Elapsed.Second.ToString())
                </td>
                <td>
                    @Html.DisplayFor(m => item.Complete)
                </td>
                <td>
                    @Html.DisplayFor(m => item.Obsolete)
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td style="width:100px">

                        <a asp-action="EditStepsForJob" asp-controller="Step" class="btn btn-sm btn-warning"
                           asp-route-Id="@item.StepsForJobID">
                            <i class="fas fa-edit"></i>
                        </a>
                    </td>
                }
            </tr>

        }
    </table>
</div>
@if (Model.StepsForJobList.Count > 0)
{
    <coool-pagination-test page-model="@Model.PagingInfo" page-action="AllStepsForJob" page-classes-enabled="true"
                           page-class="btn" page-class-normal="btn-secondary" page-id="@Model.StepsForJobList[0].TestJobID"
                           page-class-selected="btn-dark"
                           class="btn-group pull-right m-1">
    </coool-pagination-test>
}
else
{
    <p>No steps availables</p>
}
<br />



